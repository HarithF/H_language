#include <map>
#include "../tok.h"

std::map<std::string, H::Tok::Tag> c_keywords = {
    { "auto", H::Tok::Tag::K_auto },
    { "break", H::Tok::Tag::K_break },
    { "case", H::Tok::Tag::K_case },
    { "char", H::Tok::Tag::K_char },
    { "const", H::Tok::Tag::K_const },
    { "continue", H::Tok::Tag::K_continue },
    { "default", H::Tok::Tag::K_default },
    { "do", H::Tok::Tag::K_do },
    { "double", H::Tok::Tag::K_double },
    { "else", H::Tok::Tag::K_else },
    { "enum", H::Tok::Tag::K_enum },
    { "extern", H::Tok::Tag::K_extern },
    { "float", H::Tok::Tag::K_float },
    { "for", H::Tok::Tag::K_for },
    { "goto", H::Tok::Tag::K_goto },
    { "if", H::Tok::Tag::K_if },
    { "inline", H::Tok::Tag::K_inline },
    { "int", H::Tok::Tag::K_int },
    { "long", H::Tok::Tag::K_long },
    { "register", H::Tok::Tag::K_register },
    { "restrict", H::Tok::Tag::K_restrict },
    { "return", H::Tok::Tag::K_return },
    { "short", H::Tok::Tag::K_short },
    { "signed", H::Tok::Tag::K_signed },
    { "sizeof", H::Tok::Tag::K_sizeof },
    { "static", H::Tok::Tag::K_static },
    { "struct", H::Tok::Tag::K_struct },
    { "switch", H::Tok::Tag::K_switch },
    { "typedef", H::Tok::Tag::K_typedef },
    { "union", H::Tok::Tag::K_union },
    { "unsigned", H::Tok::Tag::K_unsigned },
    { "void", H::Tok::Tag::K_void },
    { "volatile", H::Tok::Tag::K_volatile },
    { "while", H::Tok::Tag::K_while },
    { "_Alignas", H::Tok::Tag::K_Alignas },
    { "_Alignof", H::Tok::Tag::K_Alignof },
    { "_Atomic", H::Tok::Tag::K_Atomic },
    { "_Bool", H::Tok::Tag::K_Bool },
    { "_Complex", H::Tok::Tag::K_Complex },
    { "_Generic", H::Tok::Tag::K_Generic },
    { "_Imaginary", H::Tok::Tag::K_Imaginary },
    { "_Noreturn", H::Tok::Tag::K_Noreturn },
    { "_Static_assert", H::Tok::Tag::K_Static_assert },
    { "_Thread_local", H::Tok::Tag::K_Thread_local }
};

